
# Load Razorpay credentials from environment variables
# RAZORPAY_KEY_ID = os.getenv('RAZORPAY_KEY_ID')
# RAZORPAY_KEY_SECRET = os.getenv('RAZORPAY_KEY_SECRET')

# Initialize Razorpay client
# razorpay_client = razorpay.Client(auth=(RAZORPAY_KEY_ID, RAZORPAY_KEY_SECRET))
# client = razorpay.Client(auth=(settings.RAZORPAY_KEY_ID, settings.RAZORPAY_KEY_SECRET))
RAZORPAY_KEY_ID = os.getenv('RAZORPAY_KEY_ID')
RAZORPAY_KEY_SECRET = os.getenv('RAZORPAY_KEY_SECRET')

# Initialize Razorpay client
razorpay_client = razorpay.Client(auth=(RAZORPAY_KEY_ID, RAZORPAY_KEY_SECRET))

@csrf_exempt
def create_order(request):
    if request.method == "POST":
        user = request.user
        plan_name = request.POST.get("plan_name")
        amount = int(request.POST.get("amount")) * 100  # in paisa

        try:
            # Create order in Razorpay
            order_data = {
                "amount": amount,
                "currency": "INR",
                "payment_capture": 1
            }
            order = razorpay_client.order.create(order_data)

            # Save to database
            Payment.objects.create(
                user=user,
                plan_name=plan_name,
                amount=amount / 100,  # Save in INR
                razorpay_order_id=order["id"],
                status="Created"
            )

            return JsonResponse({
                "id": order["id"],
                "amount": order["amount"],
                "currency": order["currency"],
                "razorpay_key": RAZORPAY_KEY_ID
            })
        except Exception as e:
            return JsonResponse({"error": str(e)}, status=500)

# @csrf_exempt
# def create_order(request):
#     if request.method == "POST":
#         user = request.user  # Get logged-in user
#         plan_name = request.POST.get("plan_name")  # Get plan name from frontend
#         amount = int(request.POST.get("amount")) * 100  # Convert to paisa

#         # Create an order with Razorpay
#         order_data = {
#             "amount": amount,
#             "currency": "INR",
#             "payment_capture": 1,
#             "razorpay_key": RAZORPAY_KEY_ID
#         }
#         order = razorpay_client.order.create(order_data)

#         # Save order in the database
#         payment = Payment.objects.create(
#             user=user,
#             plan_name=plan_name,
#             amount=amount / 100,  # Convert back to INR
#             razorpay_order_id=order["id"],
#             status="Created"
#         )

#         return JsonResponse({"id": order["id"], "amount": order["amount"], "currency": order["currency"],"razorpay_key": RAZORPAY_KEY_ID})
